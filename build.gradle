buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.liquibase:liquibase-core:4.29.2'
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '6.6.0'
//    id 'org.liquibase.gradle' version '3.0.2'
}

group = 'com.nick1est'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.security:spring-security-messaging'

    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'net.datafaker:datafaker:2.0.2'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.5'
    implementation 'commons-io:commons-io:2.19.0'

//    liquibaseRuntime 'org.liquibase:liquibase-core:4.29.2'
//    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
//    liquibaseRuntime 'info.picocli:picocli:4.6.1'
//    liquibaseRuntime 'org.postgresql:postgresql'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.liquibase:liquibase-core:4.29.2'
    implementation('org.liquibase:liquibase-groovy-dsl:4.0.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    runtimeOnly 'info.picocli:picocli:4.6.1'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}
/*
liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            url 'jdbc:postgresql://localhost:5432/proconnectx'
            username 'proconnectx'
            password 'proconnectx'
            driver 'org.postgresql.Driver'
        }
    }
}*/

tasks.named('test') {
    useJUnitPlatform()
}

task generateApi(type: Exec) {
    commandLine 'powershell', '-ExecutionPolicy', 'Bypass', '-File', './util/generate-api.ps1'
}
build.dependsOn generateApi


openApiGenerate {
    generatorName.set("typescript-redux-query")
    inputSpec.set("$rootDir/api-docs.yaml")
    outputDir.set("$rootDir/generated-client")
    apiPackage.set("org.openapi.proconnectx.api")
    invokerPackage.set("org.openapi.proconnectx.invoker")
    modelPackage.set("org.openapi.proconnectx.model")
}

