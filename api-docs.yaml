openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3000/api
  description: Generated server url
paths:
  /bid/review/{projectId}/{bidId}:
    put:
      tags:
      - bid-controller
      operationId: reviewBid
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: bidId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Bid'
  /bid/decline/{projectId}/{bidId}:
    put:
      tags:
      - bid-controller
      operationId: declineBid
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: bidId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Bid'
  /bid/approve/{projectId}/{bidId}:
    put:
      tags:
      - bid-controller
      operationId: approveBid
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: bidId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Bid'
  /project:
    get:
      tags:
      - projects-controller
      operationId: getFilteredProjects
      parameters:
      - name: projectFilter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ProjectFilter'
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
      - projects-controller
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateDto'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Project'
  /offer:
    get:
      tags:
      - offer-controller
      operationId: getFilteredOffers
      parameters:
      - name: offerFilter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/OfferFilter'
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer'
    post:
      tags:
      - offer-controller
      operationId: createOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Offer'
  /bid/{projectId}:
    post:
      tags:
      - bid-controller
      operationId: makeBid
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidRequest'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Bid'
  /auth/signup:
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /auth/logout:
    post:
      tags:
      - auth-controller
      operationId: logoutUser
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /test/user:
    get:
      tags:
      - test-controller
      operationId: userAccess
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /test/freelancer:
    get:
      tags:
      - test-controller
      operationId: moderatorAccess
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /test/all:
    get:
      tags:
      - test-controller
      operationId: allAccess
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /test/admin:
    get:
      tags:
      - test-controller
      operationId: adminAccess
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /client:
    get:
      tags:
      - client-controller
      operationId: getFilteredFreelancers
      parameters:
      - name: freelancerFilter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FreelancerFilter'
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
  /client/profile/{id}:
    get:
      tags:
      - client-controller
      operationId: getClientProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Client'
  /auth:
    get:
      tags:
      - auth-controller
      operationId: getCurrentUser
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
    Bid:
      type: object
      properties:
        id:
          type: integer
          format: int64
        project:
          $ref: '#/components/schemas/Project'
        freelancer:
          $ref: '#/components/schemas/Client'
        price:
          type: integer
          format: int32
        bidStatus:
          type: string
          enum:
          - NEW
          - IN_REVIEW
          - APPROVED
          - DECLINED
        description:
          type: string
        datePosted:
          type: string
          format: date-time
        dateSubmitted:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          enum:
          - WEB_DESIGN
          - WEB_DEVELOPMENT
          - MOBILE_DEVELOPMENT
          - GRAPHIC_DESIGN
          - VIDEO_EDITING
          - WRITING
          - TRANSLATION
          - MARKETING
          - SALES
          - CUSTOMER_SERVICE
          - ADMIN_SUPPORT
          - DATA_SCIENCE
          - ENGINEERING
          - ACCOUNTING
          - LEGAL
          - OTHER
    Client:
      required:
      - email
      - name
      - password
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        username:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        profilePicture:
          type: string
        location:
          type: string
        rating:
          type: number
          format: double
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        owner:
          $ref: '#/components/schemas/Client'
        freelancer:
          $ref: '#/components/schemas/Client'
        budget:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/Category'
        status:
          type: string
          enum:
          - OPEN
          - IN_PROGRESS
          - CLOSED
        location:
          type: string
        bids:
          type: array
          items:
            $ref: '#/components/schemas/Bid'
        datePosted:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          enum:
          - ROLE_CLIENT
          - ROLE_FREELANCER
          - ROLE_ADMIN
    ProjectCreateDto:
      required:
      - budget
      - category
      - description
      - location
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        budget:
          type: integer
          format: int32
        category:
          type: string
          enum:
          - WEB_DESIGN
          - WEB_DEVELOPMENT
          - MOBILE_DEVELOPMENT
          - GRAPHIC_DESIGN
          - VIDEO_EDITING
          - WRITING
          - TRANSLATION
          - MARKETING
          - SALES
          - CUSTOMER_SERVICE
          - ADMIN_SUPPORT
          - DATA_SCIENCE
          - ENGINEERING
          - ACCOUNTING
          - LEGAL
          - OTHER
        location:
          type: string
    Offer:
      type: object
    BidRequest:
      type: object
      properties:
        description:
          type: string
        price:
          type: integer
          format: int32
    SignupRequest:
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          type: string
        email:
          maxLength: 50
          minLength: 0
          type: string
        role:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 40
          minLength: 6
          type: string
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ProjectFilter:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
            enum:
            - WEB_DESIGN
            - WEB_DEVELOPMENT
            - MOBILE_DEVELOPMENT
            - GRAPHIC_DESIGN
            - VIDEO_EDITING
            - WRITING
            - TRANSLATION
            - MARKETING
            - SALES
            - CUSTOMER_SERVICE
            - ADMIN_SUPPORT
            - DATA_SCIENCE
            - ENGINEERING
            - ACCOUNTING
            - LEGAL
            - OTHER
        location:
          type: string
        minBudget:
          type: number
          format: double
        maxBudget:
          type: number
          format: double
    BoundDouble:
      type: object
      properties:
        value:
          type: number
          format: double
        inclusive:
          type: boolean
        bounded:
          type: boolean
    OfferFilter:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        location:
          type: string
        rating:
          type: number
          format: double
        price:
          $ref: '#/components/schemas/RangeDouble'
    RangeDouble:
      type: object
      properties:
        lowerBound:
          $ref: '#/components/schemas/BoundDouble'
        upperBound:
          $ref: '#/components/schemas/BoundDouble'
    FreelancerFilter:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        location:
          type: string
        rating:
          type: number
          format: double
    UserInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        roles:
          type: array
          items:
            type: string
