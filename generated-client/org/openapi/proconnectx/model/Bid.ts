// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Project,
    ProjectFromJSON,
    ProjectToJSON,
} from './';

/**
 * 
 * @export
 * @interface Bid
 */
export interface Bid  {
    /**
     * 
     * @type {number}
     * @memberof Bid
     */
    id?: number;
    /**
     * 
     * @type {Project}
     * @memberof Bid
     */
    project?: Project;
    /**
     * 
     * @type {object}
     * @memberof Bid
     */
    bidder?: object;
    /**
     * 
     * @type {number}
     * @memberof Bid
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof Bid
     */
    status?: BidStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Bid
     */
    coverLetter?: string;
    /**
     * 
     * @type {string}
     * @memberof Bid
     */
    shortCoverLetter?: string;
    /**
     * 
     * @type {Date}
     * @memberof Bid
     */
    datePosted?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Bid
     */
    dateSubmitted?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Bid
     */
    dueDate?: Date;
}

export function BidFromJSON(json: any): Bid {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'project': !exists(json, 'project') ? undefined : ProjectFromJSON(json['project']),
        'bidder': !exists(json, 'bidder') ? undefined : json['bidder'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'coverLetter': !exists(json, 'coverLetter') ? undefined : json['coverLetter'],
        'shortCoverLetter': !exists(json, 'shortCoverLetter') ? undefined : json['shortCoverLetter'],
        'datePosted': !exists(json, 'datePosted') ? undefined : new Date(json['datePosted']),
        'dateSubmitted': !exists(json, 'dateSubmitted') ? undefined : new Date(json['dateSubmitted']),
        'dueDate': !exists(json, 'dueDate') ? undefined : new Date(json['dueDate']),
    };
}

export function BidToJSON(value?: Bid): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'project': ProjectToJSON(value.project),
        'bidder': value.bidder,
        'amount': value.amount,
        'status': value.status,
        'coverLetter': value.coverLetter,
        'shortCoverLetter': value.shortCoverLetter,
        'datePosted': value.datePosted === undefined ? undefined : value.datePosted.toISOString(),
        'dateSubmitted': value.dateSubmitted === undefined ? undefined : value.dateSubmitted.toISOString(),
        'dueDate': value.dueDate === undefined ? undefined : value.dueDate.toISOString().substr(0,10),
    };
}

/**
* @export
* @enum {string}
*/
export enum BidStatusEnum {
    New = 'NEW',
    InReview = 'IN_REVIEW',
    Approved = 'APPROVED',
    Declined = 'DECLINED'
}


